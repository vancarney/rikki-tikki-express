// Generated by CoffeeScript 1.8.0
var API, ExpressAdapter, e;

ExpressAdapter = (function() {
  ExpressAdapter.prototype.required = ['app'];

  function ExpressAdapter(params) {
    this.params = params;
  }

  ExpressAdapter.prototype.addRoute = function(route, method, handler) {
    var _base;
    return typeof (_base = this.params.app)[method] === "function" ? _base[method](route, handler || this.responseHandler) : void 0;
  };

  ExpressAdapter.prototype.responseHandler = function(res, data, headers) {
    var header, value;
    if (!headers) {
      res.setHeader('Content-Type', 'application/json');
    } else {
      for (header in headers) {
        value = headers[header];
        res.setHeader(header, value);
      }
    }
    return res.status(data.status).send(data.content);
  };

  ExpressAdapter.prototype.requestHandler = function() {
    return false;
  };

  return ExpressAdapter;

})();

module.exports = ExpressAdapter;

try {
  if ((API = require('rikki-tikki')) == null) {
    API = require('../../rikki-tikki');
  }
  API.registerAdapter('express', ExpressAdapter);
} catch (_error) {
  e = _error;
  console.log(e);
  console.log('ExpressAdapter not registered.\nreason: rikki-tikki was not found');
}

module.exports.use = (function(_this) {
  return function(express) {
    return new ExpressAdapter({
      app: express
    });
  };
})(this);
